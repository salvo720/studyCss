/* normal flow : e il comportamento basico degli elementi in css , in particole ad esempio quando abbiamo un elemnto con : 
1) display inline = 
2) display block = l'elemento occupera 1 riga */

/* inline e block : vanno a modificare il comportamento dell'elemnto rispetto ad altri elementi  */
/* flex e grid : modificano possono essere considerate delle macro categorie perche vanno a moficare all'interno dell'elemento in cui lo applichiamo  */

/* flexbox : display flex , flex-direction , e align-item  */


.flex-wrapper {
    display: flex;
}

.flex-wrapper > div {
    padding: 20px;
    margin: 5px;
    background: salmon;
}

.grid-wrapper {
    display:grid;
    grid-template-columns: 1fr 1fr 1fr ;
    /* colonne della griglia  , 1fr = una colonna , sono 3 quindi 3 colonne  */
    grid-template-rows: 100px 100px;
    /* altezza per ogni row , in questo caso  row 1 = 100 px di altezza , e row 2 = 100 px di altezza   */
    grid-gap: 10px;
    /* gap tra una column e l'altra , all'aumentare del grid-gap diminusce la dimensione della grid-tempalte-row  */
}

.grid-wrapper > div {
    padding: 20px;
    margin: 5px;
    background-color: cadetblue;
}

.gbox1{
    grid-column: 2/4;
    /* grid-column : indica quante celle deve occpare la collona in questo caso dalla 2 alla 4  */
    grid-row: 1;
}

.gbox2{
    grid-column: 1;
    grid-row: 1/3;
     /* grid-rows : indica quante celle deve occupare la row in questo caso dalla 1 alla 3  */
}

.gbox3{
    grid-column: 2;
    grid-row: 3;
}

/* Float */
/* Float : float serve per far flottare o spostare l'elemento sulla parte destra o sinistra e l'elemento sara inline , */
.float{
    float:left;
    width: 150px;
    height: 150px;
    margin-right: 30px;
    background-color: skyblue;
}

/* Positioning */
/* Positioning : static ( default ) , realtive , absolute , fixed , sticky  */
/* position : relative ; = la posizione e reliva rispetto al punto di partenza  */
/* position : absolute ; = la posizione e reliva rispetto al al parent o container , in questo caso il body   */
/* position : fixed ; = la posizione e fissa rispetto al viewport , quindi anche scorrendo la pagina l'elemento sara fisso in punto della vieport    */
/* position : sticky ; = la posizione e variabile , finche l'elemento non viene oltrepassato sara static , dopo che lo si supera sara fixed al punto che abbiamo fissato su top: 30 px ;     */
.sample{
    background-color: rgb(207, 232, 220);
    border : 2px solid rgb(79,185,227);
    padding: 10px;
    margin: 10px;
    border-radius: 5px;
}

.positioned{
    position: static ;
    top: 30px;
    left: 30px;
}

/* Table Layout */
form{
    display:table;
    margin: 0 auto;
}

form div {
    display: table-row;
}

form label ,
form input {
    display: table-cell;
    margin-bottom: 10px;
}

form label {
    width: 200px;
    padding-right: 5%;
    text-align: right;
}

form input {
    width: 300px;
}

form p{
    display: table-caption;
    caption-side: bottom;
    width: 300px;
    color: #999;
    font-style:italic;
}

/* Multi-column layout  */
.container {
    column-width:200px;
}

/*  column-width:200px; = va a creare una collonna di 200 px in base alla lunghezza dell'elemento se una non basta ne verranno create altre  */
