/* i pixel sono delle unita di misura assoluti , per dare piu elasticita al nostro template usiamo quelle relative  */

/* 
assolute :
1) px
2)
3)
4)
5)
6)
relative :
1) em : prende la font-size del parente e la moltiplica per il valore che mettiamo esempio : Esempio em 
2) ex
3) ch
4) rem
5) lh
6) vw 
7) vh 
8) vmin 
9) vmax 

em , rem : prendono la font-size dal parent 
vw , vh : predono l'1 % dell'altezza o larghezza del viewport (pagina )

*/

/* Esempio em  */
/* quindi la font-size sara : 10 x 10 = 100 , gli elemnti tra body e p , non avendo specificato una font size la ereditano da body  */


/* body {
    font-size: 10px;
} */


/* p {
    font-size: 10em;
} */

/* ------------------------------------------------------------------------------------------------------- */
/* esempio rem  */

/* div {
    font-size: 1px;
}

p {
    font-size: 10rem;
} */

/* rem andra a saltare il parent e prendera direttamente l'elemento root , quindi da p passera a root , quindi fara : 10 x 10 = 100 */

/* ------------------------------------------------------------------------------------------------------------- */

/* per quanta riguarda le percentuali , gli elementi saranno sempre il tot% del wrapper(contenitore ) , quindi cambiando 
la risoluzione cambia la dimensione del wrapper e quindi anche dell'elemento */

div {
    /* background-color: salmon; */
    width: 50%;
    opacity: 0.1;
}

p {
    width: 30%;
    background-color: green;
}

/* abbiamo 3 modi per poter definire un colore : 
1) easadecimale : possiamo usare da 0123456789abcdef ( #0f0f0f )
2) rgb : forma i colori partendo da red green e blue ,  ( red 0-255 , green 0-255 , blue 0-255 )
3) rgba : uguale ad rbg con aggiunta dell'alphachannel indica la trasparenza/opacita , ( red 0-255 , green 0-255 , blue 0-255 , alpha 0-1 )
4) hsl : prende 3 parametri ( hue 0-360 , saturation % , lightness % )
5) hsla : uguale ad hsl ma con l'aggiunta dell'alpha channel ( hue 0-360 , saturation % , lightness % , alpha 0-1 )

*/

/* funzione calc : esegue l'operazione matica e ci ritora la cifra numerica dell'elemento es : calc(20% -100px) */

.pcalc {
    width: calc(30% - 100px);
    background-color: lightsalmon;
}


/* position : top,bottom ,right,center , center   */

/* l'attributo content di :after e ::before accetta le stringhe  */

/* gli identifiers sono i colori definiti da css e agganciabili sull'elemeto color attributo  */